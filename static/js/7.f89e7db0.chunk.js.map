{"version":3,"sources":["store/cart/cartActions.js","../node_modules/@material-ui/icons/esm/Add.js","../node_modules/@material-ui/icons/esm/Remove.js","pages/Product/Product.jsx"],"names":["addToCart","product","count","type","types","ADD","payload","removeFromCart","productId","toast","error","REMOVE","increaseNumbers","INCREASE","decreaseNumbers","DECREASE","clearCart","CLEAR","createSvgIcon","React","createElement","d","useStyles","makeStyles","name","fontSize","fontWeight","image","width","maxWidth","boxShadow","price","color","marginLeft","offprice","textDecoration","addButton","backgroundColor","height","cartButton","border","plus","connect","useParams","classes","useState","pending","setPending","setCount","on_sale","regular_price","images","setProduct","useEffect","api","get","then","response","console","log","data","catch","minHeight","marginY","container","spacing","xs","sm","item","display","justifyContent","className","indicators","map","key","src","alt","padding","alignItems","marginBottom","marginTop","String","toPersianDigits","onClick","dispaly","success","to"],"mappings":"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","file":"static/js/7.f89e7db0.chunk.js","sourcesContent":["import types from \"./cartActionTypes\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const addToCart = (product, count) => ({ type: types.ADD, payload: { product: product, count: count } });\r\n\r\nexport const removeFromCart = (productId) => {\r\n  toast.error(\"محصول از سبد خرید حذف شد\");\r\n  return { type: types.REMOVE, payload: productId };\r\n};\r\n\r\nexport const increaseNumbers = (productId) => ({ type: types.INCREASE, payload: productId });\r\n\r\nexport const decreaseNumbers = (productId) => ({ type: types.DECREASE, payload: productId });\r\n\r\nexport const clearCart = () => ({ type: types.CLEAR });\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Box, Typography, Button, IconButton } from \"@material-ui/core\";\r\nimport { ShoppingCart, Add, Remove } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport api from \"../../gate/api\";\r\nimport MUICarousel from \"react-material-ui-carousel\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport { addToCart } from \"../../store/cart/cartActions\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  name: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  image: {\r\n    width: \"90%\",\r\n    maxWidth: \"400px\",\r\n    boxShadow: \"3px 3px 3px #bbb\",\r\n  },\r\n  price: {\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"bold\",\r\n    color: \"#0DA869\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  offprice: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"bold\",\r\n    color: \"#D80D0D\",\r\n    textDecoration: \"line-through\",\r\n  },\r\n  addButton: {\r\n    backgroundColor: \"#6E70FF\",\r\n    color: \"#FFFFFF\",\r\n    width: \"200px\",\r\n    marginLeft: \"10px\",\r\n    height: \"50px\",\r\n    \"&:hover\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  cartButton: {\r\n    border: \"1px solid #ccc\",\r\n    color: \"#888\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n  },\r\n  plus: {\r\n    backgroundColor: \"#F0F0F5\",\r\n    color: \"#6E70FF\",\r\n  },\r\n}));\r\n\r\nfunction Product({ addToCart }) {\r\n  const { productId } = useParams();\r\n  const classes = useStyles();\r\n  const [pending, setPending] = useState(true);\r\n  const [count, setCount] = useState(1);\r\n  const [product, setProduct] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    on_sale: \"\",\r\n    regular_price: \"\",\r\n    images: [\"\", \"\", \"\"],\r\n  });\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`products/${productId}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        setProduct(response.data);\r\n        setPending(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }, []);\r\n\r\n  const addToCartHandler = () => {\r\n    addToCart(product, count);\r\n    toast.success(\"به سبد خرید افزوده شد\");\r\n  };\r\n\r\n  return pending ? (\r\n    <Loading />\r\n  ) : (\r\n    <Box minHeight=\"400px\" marginY=\"20px\" width=\"100%\">\r\n      <Grid container spacing={1}>\r\n        <Grid xs={12} sm={6} item>\r\n          <Box display=\"flex\" justifyContent=\"cetner\" width=\"100%\" height=\"100%\">\r\n            <MUICarousel className=\"Carousel\" indicators={false}>\r\n              {product.images.map((item) => (\r\n                <Box width=\"100%\" height=\"100%\" display=\"flex\" justifyContent=\"center\" key={item}>\r\n                  <img className={classes.image} src={item.src} alt={product.name} />\r\n                </Box>\r\n              ))}\r\n            </MUICarousel>\r\n          </Box>\r\n        </Grid>\r\n        <Grid xs={12} sm={6} item>\r\n          <Box width=\"100%\" height=\"100%\" padding=\"15px\">\r\n            <Typography className={classes.name}>{product.name}</Typography>\r\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"5px\" marginTop=\"15px\">\r\n              <Typography className={classes.price}>{String(product.price).toPersianDigits()} تومان</Typography>\r\n              {product.on_sale && <Typography className={classes.offprice}>{String(product.regular_price).toPersianDigits()} تومان</Typography>}\r\n            </Box>\r\n            <hr />\r\n            <Box display=\"flex\" alignItems=\"center\" marginY=\"10px\">\r\n              <IconButton className={classes.plus} onClick={() => setCount(count + 1)}>\r\n                <Add />\r\n              </IconButton>\r\n              <Box width=\"50px\" height=\"50px\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                {String(count).toPersianDigits()}\r\n              </Box>\r\n              {count > 1 && (\r\n                <IconButton className={classes.plus} onClick={() => setCount(count - 1)}>\r\n                  <Remove />\r\n                </IconButton>\r\n              )}\r\n            </Box>\r\n            <Box dispaly=\"flex\">\r\n              <Button onClick={addToCartHandler} className={classes.addButton}>\r\n                افزودن به سبد خرید\r\n              </Button>\r\n              <Link to=\"/cart\">\r\n                <Button className={classes.cartButton}>\r\n                  <ShoppingCart />\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default connect(null, { addToCart })(Product);\r\n"],"sourceRoot":""}